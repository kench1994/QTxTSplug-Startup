/****************************************************************************
**
** Namespace TSPlugLib generated by dumpcpp v5.9.1 using
** C:\Qt\5.9.1\mingw53_32\bin\dumpcpp.exe TSPlug.dll
** from the type library TSPlug.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_TSPLUGLIB_H
#define QAX_DUMPCPP_TSPLUGLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef TSPLUGLIB_EXPORT
#define TSPLUGLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace TSPlugLib {


class TSPLUGLIB_EXPORT ITSPlugInterFace : public QAxObject
{
public:
    ITSPlugInterFace(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method AsmAdd

    方法AsmAdd

    */
    inline int AsmAdd(const QString& asm_ins);

    /*
    Method AsmCall

    方法AsmCall

    */
    inline int AsmCall(int hwnd, int mode);

    /*
    Method AsmClear

    方法AsmClear

    */
    inline int AsmClear();

    /*
    Method AsmCode

    方法AsmCode

    */
    inline QString AsmCode(int base_addr);

    /*
    Method Assemble

    方法Assemble

    */
    inline QString Assemble(const QString& asm_code, int base_addr, int is_upper);

    /*
    Method BindWindow

    方法BindWindow

    */
    inline int BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode);

    /*
    Method BindWindowEx

    方法BindWindowEx

    */
    inline int BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& publics, int mode);

    /*
    Method Capture

    方法Capture

    */
    inline int Capture(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CaptureGif

    方法CaptureGif

    */
    inline int CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time);

    /*
    Method CaptureJpg

    方法CaptureJpg

    */
    inline int CaptureJpg(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CapturePng

    方法CapturePng

    */
    inline int CapturePng(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CheckFontSmooth

    方法CheckFontSmooth

    */
    inline int CheckFontSmooth();

    /*
    Method CheckUAC

    方法CheckUAC

    */
    inline uint CheckUAC();

    /*
    Method ClearDict

    方法ClearDict

    */
    inline int ClearDict(int index);

    /*
    Method ClientToScreen

    方法ClientToScreen

    */
    inline int ClientToScreen(int ClientToScreen, QVariant& x, QVariant& y);

    /*
    Method CmpColor

    方法CmpColor

    */
    inline int CmpColor(int x, int y, const QString& color, double sim);

    /*
    Method DisableFontSmooth

    方法DisableFontSmooth

    */
    inline int DisableFontSmooth();

    /*
    Method DoubleToData

    方法DoubleToData

    */
    inline QString DoubleToData(double value);

    /*
    Method DownCpu

    方法DownCpu

    */
    inline int DownCpu(int rate);

    /*
    Method EnableRealKeypad

    方法EnableRealKeypad

    */
    inline uint EnableRealKeypad(uint enable);

    /*
    Method EnableRealMouse

    方法EnableRealMouse

    */
    inline uint EnableRealMouse(uint enable, uint mousedelay, uint mousestep);

    /*
    Method EnumProcess

    方法EnumProcess

    */
    inline QString EnumProcess(const QString& name);

    /*
    Method EnumWindow

    方法EnumWindow

    */
    inline QString EnumWindow(int parent, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowByProcess

    方法EnumWindowByProcess

    */
    inline QString EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter);

    /*
    Method FindColor

    方法FindColor

    */
    inline int FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindColorEx

    方法FindColorEx

    */
    inline QString FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindData

    方法FindData

    */
    inline QString FindData(int hwnd, const QString& addr_range, const QString& data);

    /*
    Method FindDataEx

    方法FindDataEx

    */
    inline QString FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode);

    /*
    Method FindDouble

    方法FindDouble

    */
    inline QString FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max);

    /*
    Method FindDoubleEx

    方法FindDoubleEx

    */
    inline QString FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode);

    /*
    Method FindFloat

    方法FindFloat

    */
    inline QString FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max);

    /*
    Method FindFloatEx

    方法FindFloatEx

    */
    inline QString FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode);

    /*
    Method FindInt

    方法FindInt

    */
    inline QString FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type);

    /*
    Method FindIntEx

    方法FindIntEx

    */
    inline QString FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode);

    /*
    Method FindMultiColor

    方法FindMultiColor

    */
    inline uint FindMultiColor(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir, QVariant& intX, QVariant& intY);

    /*
    Method FindMultiColorEx

    方法FindMultiColorEx

    */
    inline QString FindMultiColorEx(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir);

    /*
    Method FindPic

    方法FindPic

    */
    inline int FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindPicEx

    方法FindPicEx

    */
    inline QString FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicExS

    方法FindPicExS

    */
    inline QString FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicS

    方法FindPicS

    */
    inline QString FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindStr

    方法FindStr

    */
    inline int FindStr(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrEx

    方法FindStrEx

    */
    inline QString FindStrEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrExS

    方法FindStrExS

    */
    inline QString FindStrExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFast

    方法FindStrFast

    */
    inline int FindStrFast(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrFastEx

    方法FindStrFastEx

    */
    inline QString FindStrFastEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFastExS

    方法FindStrFastExS

    */
    inline QString FindStrFastExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFastS

    方法FindStrFastS

    */
    inline QString FindStrFastS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrS

    方法FindStrS

    */
    inline QString FindStrS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindString

    方法FindString

    */
    inline QString FindString(int hwnd, const QString& addr_range, const QString& string_value, int type);

    /*
    Method FindStringEx

    方法FindStringEx

    */
    inline QString FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode);

    /*
    Method FindWindow

    方法FindWindow

    */
    inline int FindWindow(const QString& class_name, const QString& title);

    /*
    Method FindWindowByProcess

    方法FindWindowByProcess

    */
    inline int FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title);

    /*
    Method FindWindowByProcessId

    方法FindWindowByProcessId

    */
    inline int FindWindowByProcessId(int process_id, const QString& class_name, const QString& title);

    /*
    Method FindWindowEx

    方法FindWindowEx

    */
    inline int FindWindowEx(int parent, const QString& class_name, const QString& title);

    /*
    Method FloatToData

    方法FloatToData

    */
    inline QString FloatToData(double value);

    /*
    Method FreeProcessMemory

    方法FreeProcessMemory

    */
    inline int FreeProcessMemory(int hwnd);

    /*
    Method GetBasePath

    方法GetBasePath

    */
    inline QString GetBasePath();

    /*
    Method GetClientRect

    方法GetClientRect

    */
    inline int GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetClientSize

    方法GetClientSize

    */
    inline int GetClientSize(int hwnd, QVariant& width, QVariant& height);

    /*
    Method GetClipboard

    方法GetClipboard

    */
    inline QString GetClipboard();

    /*
    Method GetColor

    方法GetColor

    */
    inline QString GetColor(int x, int y);

    /*
    Method GetCommandLine

    方法GetCommandLine

    */
    inline QString GetCommandLine(int hwnd);

    /*
    Method GetCursorPos

    方法GetCursorPos

    */
    inline int GetCursorPos(QVariant& x, QVariant& y);

    /*
    Method GetCursorShape

    方法GetCursorShape

    */
    inline QString GetCursorShape();

    /*
    Method GetForegroundFocus

    方法GetForegroundFocus

    */
    inline int GetForegroundFocus();

    /*
    Method GetForegroundWindow

    方法GetForegroundWindow

    */
    inline int GetForegroundWindow();

    /*
    Method GetMachineCode

    方法GetMachineCode

    */
    inline QString GetMachineCode();

    /*
    Method GetModuleBaseAddr

    方法GetModuleBaseAddr

    */
    inline int GetModuleBaseAddr(int hwnd, const QString& modulename);

    /*
    Method GetMousePointWindow

    方法GetMousePointWindow

    */
    inline int GetMousePointWindow();

    /*
    Method GetNowDict

    方法GetNowDict

    */
    inline int GetNowDict();

    /*
    Method GetPath

    方法GetPath

    */
    inline QString GetPath();

    /*
    Method GetPointWindow

    方法GetPointWindow

    */
    inline int GetPointWindow(int x, int y);

    /*
    Method GetProcessInfo

    方法GetProcessInfo

    */
    inline QString GetProcessInfo(int pid);

    /*
    Method GetScreenData

    方法GetScreenData

    */
    inline int GetScreenData(int x1, int y1, int x2, int y2);

    /*
    Method GetSpecialWindow

    方法GetSpecialWindow

    */
    inline int GetSpecialWindow(int flag);

    /*
    Method GetWindow

    方法GetWindow

    */
    inline int GetWindow(int hwnd, int flag);

    /*
    Method GetWindowClass

    方法GetWindowClass

    */
    inline QString GetWindowClass(int hwnd);

    /*
    Method GetWindowProcessId

    方法GetWindowProcessId

    */
    inline int GetWindowProcessId(int hwnd);

    /*
    Method GetWindowProcessPath

    方法GetWindowProcessPath

    */
    inline QString GetWindowProcessPath(int hwnd);

    /*
    Method GetWindowRect

    方法GetWindowRect

    */
    inline int GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetWindowState

    方法GetWindowState

    */
    inline int GetWindowState(int hwnd, int flag);

    /*
    Method GetWindowTitle

    方法GetWindowTitle

    */
    inline QString GetWindowTitle(int hwnd);

    /*
    Method IntToData

    方法IntToData

    */
    inline QString IntToData(int value, int type);

    /*
    Method IsBind

    方法IsBind

    */
    inline int IsBind(int hwnd);

    /*
    Method IsDisplayDead

    方法IsDisplayDead

    */
    inline int IsDisplayDead(int x1, int y1, int x2, int y2, int t);

    /*
    Method KeyDown

    方法KeyDown

    */
    inline int KeyDown(int vk_code);

    /*
    Method KeyDownChar

    方法KeyDownChar

    */
    inline int KeyDownChar(const QString& key_str);

    /*
    Method KeyPress

    方法KeyPress

    */
    inline int KeyPress(int vk_code);

    /*
    Method KeyPressChar

    方法KeyPressChar

    */
    inline int KeyPressChar(const QString& key_str);

    /*
    Method KeyPressStr

    方法KeyPressStr

    */
    inline int KeyPressStr(const QString& key_str, int delay);

    /*
    Method KeyUp

    方法KeyUp

    */
    inline int KeyUp(int vk_code);

    /*
    Method KeyUpChar

    方法KeyUpChar

    */
    inline int KeyUpChar(const QString& key_str);

    /*
    Method LeftClick

    方法LeftClick

    */
    inline int LeftClick();

    /*
    Method LeftDoubleClick

    方法LeftDoubleClick

    */
    inline int LeftDoubleClick();

    /*
    Method LeftDown

    方法LeftDown

    */
    inline int LeftDown();

    /*
    Method LeftUp

    方法LeftUp

    */
    inline int LeftUp();

    /*
    Method LockInput

    方法LockInput

    */
    inline int LockInput(int lock);

    /*
    Method MatchPicName

    方法MatchPicName

    */
    inline QString MatchPicName(const QString& pic_name);

    /*
    Method MiddleClick

    方法MiddleClick

    */
    inline int MiddleClick();

    /*
    Method MoveR

    方法MoveR

    */
    inline int MoveR(int rx, int ry);

    /*
    Method MoveTo

    方法MoveTo

    */
    inline int MoveTo(int x, int y);

    /*
    Method MoveToEx

    方法MoveToEx

    */
    inline QString MoveToEx(uint x, uint y, uint w, uint h);

    /*
    Method MoveWindow

    方法MoveWindow

    */
    inline int MoveWindow(int hwnd, int x, int y);

    /*
    Method Ocr

    方法Ocr

    */
    inline QString Ocr(int x1, int y1, int x2, int y2, const QString& color_format, double sim);

    /*
    Method OcrEx

    方法OcrEx

    */
    inline QString OcrEx(int x1, int y1, int x2, int y2, const QString& color_format, double sim);

    /*
    Method ReadData

    方法ReadData

    */
    inline QString ReadData(int hwnd, const QString& addr, int len);

    /*
    Method ReadDouble

    方法ReadDouble

    */
    inline double ReadDouble(int hwnd, const QString& addr);

    /*
    Method ReadFloat

    方法ReadFloat

    */
    inline double ReadFloat(int hwnd, const QString& addr);

    /*
    Method ReadInt

    方法ReadInt

    */
    inline int ReadInt(int hwnd, const QString& addr, int type);

    /*
    Method ReadString

    方法ReadString

    */
    inline QString ReadString(int hwnd, const QString& addr, int type, int len);

    /*
    Method Reg

    方法Reg

    */
    inline int Reg(const QString& reg_code, int type);

    /*
    Method RightClick

    方法RightClick

    */
    inline int RightClick();

    /*
    Method RightDown

    方法RightDown

    */
    inline int RightDown();

    /*
    Method RightUp

    方法RightUp

    */
    inline int RightUp();

    /*
    Method ScreenToClient

    方法ScreenToClient

    */
    inline int ScreenToClient(int hwnd, QVariant& x, QVariant& y);

    /*
    Method SendPaste

    方法SendPaste

    */
    inline int SendPaste(int hwnd);

    /*
    Method SendString

    方法SendString

    */
    inline int SendString(int hwnd, const QString& str);

    /*
    Method SendString2

    方法SendString2

    */
    inline int SendString2(int hwnd, const QString& str);

    /*
    Method SendStringIme

    方法SendStringIme

    */
    inline int SendStringIme(const QString& str);

    /*
    Method SetClientSize

    方法SetClientSize

    */
    inline int SetClientSize(int hwnd, int width, int hight);

    /*
    Method SetClipboard

    方法SetClipboard

    */
    inline int SetClipboard(const QString& value);

    /*
    Method SetDict

    方法SetDict

    */
    inline int SetDict(int index, const QString& file);

    /*
    Method SetDictPwd

    方法SetDictPwd

    */
    inline int SetDictPwd(const QString& pwd);

    /*
    Method SetKeypadDelay

    方法SetKeypadDelay

    */
    inline int SetKeypadDelay(const QString& type, int delay);

    /*
    Method SetMouseDelay

    方法SetMouseDelay

    */
    inline int SetMouseDelay(const QString& type, int delay);

    /*
    Method SetPath

    方法SetPath

    */
    inline int SetPath(const QString& path);

    /*
    Method SetPicPwd

    方法SetPicPwd

    */
    inline int SetPicPwd(const QString& pwd);

    /*
    Method SetShowErrorMsg

    方法SetShowErrorMsg

    */
    inline int SetShowErrorMsg(int show);

    /*
    Method SetSimMode

    方法SetSimMode

    */
    inline uint SetSimMode(uint mode);

    /*
    Method SetUAC

    方法SetUAC

    */
    inline uint SetUAC(uint enable);

    /*
    Method SetWindowSize

    方法SetWindowSize

    */
    inline int SetWindowSize(int hwnd, int width, int height);

    /*
    Method SetWindowState

    方法SetWindowState

    */
    inline int SetWindowState(int hwnd, int flag);

    /*
    Method SetWindowText

    方法SetWindowText

    */
    inline int SetWindowText(int hwnd, const QString& title);

    /*
    Method SetWindowTransparent

    方法SetWindowTransparent

    */
    inline int SetWindowTransparent(int hwnd, int trans);

    /*
    Method StringToData

    方法StringToData

    */
    inline QString StringToData(const QString& value, int type);

    /*
    Method TSDXGraphicProtect

    方法TSDXGraphicProtect

    */
    inline int TSDXGraphicProtect(int enable);

    /*
    Method TSDXKmProtect

    方法TSDXKmProtect

    */
    inline int TSDXKmProtect(int enable, const QString& type);

    /*
    Method TSGuardProtect

    方法TSGuardProtect

    */
    inline int TSGuardProtect(int enable, const QString& type);

    /*
    Method TSGuardProtectToHide

    方法TSGuardProtectToHide

    */
    inline int TSGuardProtectToHide(int enble);

    /*
    Method TSGuardProtectToHide2

    方法TSGuardProtectToHide2

    */
    inline int TSGuardProtectToHide2(int enable);

    /*
    Method TSGuardProtectToNP

    方法TSGuardProtectToNP

    */
    inline int TSGuardProtectToNP(int enable);

    /*
    Method TerminateProcess

    方法TerminateProcess

    */
    inline int TerminateProcess(int pid);

    /*
    Method UnBindWindow

    方法UnBindWindow

    */
    inline int UnBindWindow();

    /*
    Method UseDict

    方法UseDict

    */
    inline int UseDict(int index);

    /*
    Method Ver

    方法Ver

    */
    inline QString Ver();

    /*
    Method VirtualAllocEx

    方法VirtualAllocEx

    */
    inline int VirtualAllocEx(int hwnd, int addr, int size, int type);

    /*
    Method VirtualFreeEx

    方法VirtualFreeEx

    */
    inline int VirtualFreeEx(int hwnd, int addr);

    /*
    Method WaitKey

    方法WaitKey

    */
    inline uint WaitKey(uint vk_code, uint time_out);

    /*
    Method WheelDown

    方法WheelDown

    */
    inline int WheelDown();

    /*
    Method WheelUp

    方法WheelUp

    */
    inline int WheelUp();

    /*
    Method WriteData

    方法WriteData

    */
    inline int WriteData(int hwnd, const QString& addr, const QString& data);

    /*
    Method WriteDouble

    方法WriteDouble

    */
    inline int WriteDouble(int hwnd, const QString& addr, double v);

    /*
    Method WriteFloat

    方法WriteFloat

    */
    inline int WriteFloat(int hwnd, const QString& addr, double v);

    /*
    Method WriteInt

    方法WriteInt

    */
    inline int WriteInt(int hwnd, const QString& addr, int type, int v);

    /*
    Method WriteString

    方法WriteString

    */
    inline int WriteString(int hwnd, const QString& addr, int type, const QString& v);

    /*
    Method delay

    方法Delay

    */
    inline int delay(int mis);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class TSPLUGLIB_EXPORT TSPlugInterFace : public QAxObject
{
public:
    TSPlugInterFace(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl(QStringLiteral("{bce4a484-c3bc-418b-b1f6-69d6987c126b}"));
    }

    TSPlugInterFace(ITSPlugInterFace *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Method AsmAdd

    ????AsmAdd

    */
    inline int AsmAdd(const QString& asm_ins);

    /*
    Method AsmCall

    ????AsmCall

    */
    inline int AsmCall(int hwnd, int mode);

    /*
    Method AsmClear

    ????AsmClear

    */
    inline int AsmClear();

    /*
    Method AsmCode

    ????AsmCode

    */
    inline QString AsmCode(int base_addr);

    /*
    Method Assemble

    ????Assemble

    */
    inline QString Assemble(const QString& asm_code, int base_addr, int is_upper);

    /*
    Method BindWindow

    ????BindWindow

    */
    inline int BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode);

    /*
    Method BindWindowEx

    ????BindWindowEx

    */
    inline int BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& publics, int mode);

    /*
    Method Capture

    ????Capture

    */
    inline int Capture(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CaptureGif

    ????CaptureGif

    */
    inline int CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time);

    /*
    Method CaptureJpg

    ????CaptureJpg

    */
    inline int CaptureJpg(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CapturePng

    ????CapturePng

    */
    inline int CapturePng(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CheckFontSmooth

    ????CheckFontSmooth

    */
    inline int CheckFontSmooth();

    /*
    Method CheckUAC

    ????CheckUAC

    */
    inline uint CheckUAC();

    /*
    Method ClearDict

    ????ClearDict

    */
    inline int ClearDict(int index);

    /*
    Method ClientToScreen

    ????ClientToScreen

    */
    inline int ClientToScreen(int ClientToScreen, QVariant& x, QVariant& y);

    /*
    Method CmpColor

    ????CmpColor

    */
    inline int CmpColor(int x, int y, const QString& color, double sim);

    /*
    Method DisableFontSmooth

    ????DisableFontSmooth

    */
    inline int DisableFontSmooth();

    /*
    Method DoubleToData

    ????DoubleToData

    */
    inline QString DoubleToData(double value);

    /*
    Method DownCpu

    ????DownCpu

    */
    inline int DownCpu(int rate);

    /*
    Method EnableRealKeypad

    ????EnableRealKeypad

    */
    inline uint EnableRealKeypad(uint enable);

    /*
    Method EnableRealMouse

    ????EnableRealMouse

    */
    inline uint EnableRealMouse(uint enable, uint mousedelay, uint mousestep);

    /*
    Method EnumProcess

    ????EnumProcess

    */
    inline QString EnumProcess(const QString& name);

    /*
    Method EnumWindow

    ????EnumWindow

    */
    inline QString EnumWindow(int parent, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowByProcess

    ????EnumWindowByProcess

    */
    inline QString EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter);

    /*
    Method FindColor

    ????FindColor

    */
    inline int FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindColorEx

    ????FindColorEx

    */
    inline QString FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindData

    ????FindData

    */
    inline QString FindData(int hwnd, const QString& addr_range, const QString& data);

    /*
    Method FindDataEx

    ????FindDataEx

    */
    inline QString FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode);

    /*
    Method FindDouble

    ????FindDouble

    */
    inline QString FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max);

    /*
    Method FindDoubleEx

    ????FindDoubleEx

    */
    inline QString FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode);

    /*
    Method FindFloat

    ????FindFloat

    */
    inline QString FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max);

    /*
    Method FindFloatEx

    ????FindFloatEx

    */
    inline QString FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode);

    /*
    Method FindInt

    ????FindInt

    */
    inline QString FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type);

    /*
    Method FindIntEx

    ????FindIntEx

    */
    inline QString FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode);

    /*
    Method FindMultiColor

    ????FindMultiColor

    */
    inline uint FindMultiColor(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir, QVariant& intX, QVariant& intY);

    /*
    Method FindMultiColorEx

    ????FindMultiColorEx

    */
    inline QString FindMultiColorEx(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir);

    /*
    Method FindPic

    ????FindPic

    */
    inline int FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindPicEx

    ????FindPicEx

    */
    inline QString FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicExS

    ????FindPicExS

    */
    inline QString FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicS

    ????FindPicS

    */
    inline QString FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY);

    /*
    Method FindStr

    ????FindStr

    */
    inline int FindStr(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrEx

    ????FindStrEx

    */
    inline QString FindStrEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrExS

    ????FindStrExS

    */
    inline QString FindStrExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFast

    ????FindStrFast

    */
    inline int FindStrFast(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrFastEx

    ????FindStrFastEx

    */
    inline QString FindStrFastEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFastExS

    ????FindStrFastExS

    */
    inline QString FindStrFastExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim);

    /*
    Method FindStrFastS

    ????FindStrFastS

    */
    inline QString FindStrFastS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindStrS

    ????FindStrS

    */
    inline QString FindStrS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY);

    /*
    Method FindString

    ????FindString

    */
    inline QString FindString(int hwnd, const QString& addr_range, const QString& string_value, int type);

    /*
    Method FindStringEx

    ????FindStringEx

    */
    inline QString FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode);

    /*
    Method FindWindow

    ????FindWindow

    */
    inline int FindWindow(const QString& class_name, const QString& title);

    /*
    Method FindWindowByProcess

    ????FindWindowByProcess

    */
    inline int FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title);

    /*
    Method FindWindowByProcessId

    ????FindWindowByProcessId

    */
    inline int FindWindowByProcessId(int process_id, const QString& class_name, const QString& title);

    /*
    Method FindWindowEx

    ????FindWindowEx

    */
    inline int FindWindowEx(int parent, const QString& class_name, const QString& title);

    /*
    Method FloatToData

    ????FloatToData

    */
    inline QString FloatToData(double value);

    /*
    Method FreeProcessMemory

    ????FreeProcessMemory

    */
    inline int FreeProcessMemory(int hwnd);

    /*
    Method GetBasePath

    ????GetBasePath

    */
    inline QString GetBasePath();

    /*
    Method GetClientRect

    ????GetClientRect

    */
    inline int GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetClientSize

    ????GetClientSize

    */
    inline int GetClientSize(int hwnd, QVariant& width, QVariant& height);

    /*
    Method GetClipboard

    ????GetClipboard

    */
    inline QString GetClipboard();

    /*
    Method GetColor

    ????GetColor

    */
    inline QString GetColor(int x, int y);

    /*
    Method GetCommandLine

    ????GetCommandLine

    */
    inline QString GetCommandLine(int hwnd);

    /*
    Method GetCursorPos

    ????GetCursorPos

    */
    inline int GetCursorPos(QVariant& x, QVariant& y);

    /*
    Method GetCursorShape

    ????GetCursorShape

    */
    inline QString GetCursorShape();

    /*
    Method GetForegroundFocus

    ????GetForegroundFocus

    */
    inline int GetForegroundFocus();

    /*
    Method GetForegroundWindow

    ????GetForegroundWindow

    */
    inline int GetForegroundWindow();

    /*
    Method GetMachineCode

    ????GetMachineCode

    */
    inline QString GetMachineCode();

    /*
    Method GetModuleBaseAddr

    ????GetModuleBaseAddr

    */
    inline int GetModuleBaseAddr(int hwnd, const QString& modulename);

    /*
    Method GetMousePointWindow

    ????GetMousePointWindow

    */
    inline int GetMousePointWindow();

    /*
    Method GetNowDict

    ????GetNowDict

    */
    inline int GetNowDict();

    /*
    Method GetPath

    ????GetPath

    */
    inline QString GetPath();

    /*
    Method GetPointWindow

    ????GetPointWindow

    */
    inline int GetPointWindow(int x, int y);

    /*
    Method GetProcessInfo

    ????GetProcessInfo

    */
    inline QString GetProcessInfo(int pid);

    /*
    Method GetScreenData

    ????GetScreenData

    */
    inline int GetScreenData(int x1, int y1, int x2, int y2);

    /*
    Method GetSpecialWindow

    ????GetSpecialWindow

    */
    inline int GetSpecialWindow(int flag);

    /*
    Method GetWindow

    ????GetWindow

    */
    inline int GetWindow(int hwnd, int flag);

    /*
    Method GetWindowClass

    ????GetWindowClass

    */
    inline QString GetWindowClass(int hwnd);

    /*
    Method GetWindowProcessId

    ????GetWindowProcessId

    */
    inline int GetWindowProcessId(int hwnd);

    /*
    Method GetWindowProcessPath

    ????GetWindowProcessPath

    */
    inline QString GetWindowProcessPath(int hwnd);

    /*
    Method GetWindowRect

    ????GetWindowRect

    */
    inline int GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetWindowState

    ????GetWindowState

    */
    inline int GetWindowState(int hwnd, int flag);

    /*
    Method GetWindowTitle

    ????GetWindowTitle

    */
    inline QString GetWindowTitle(int hwnd);

    /*
    Method IntToData

    ????IntToData

    */
    inline QString IntToData(int value, int type);

    /*
    Method IsBind

    ????IsBind

    */
    inline int IsBind(int hwnd);

    /*
    Method IsDisplayDead

    ????IsDisplayDead

    */
    inline int IsDisplayDead(int x1, int y1, int x2, int y2, int t);

    /*
    Method KeyDown

    ????KeyDown

    */
    inline int KeyDown(int vk_code);

    /*
    Method KeyDownChar

    ????KeyDownChar

    */
    inline int KeyDownChar(const QString& key_str);

    /*
    Method KeyPress

    ????KeyPress

    */
    inline int KeyPress(int vk_code);

    /*
    Method KeyPressChar

    ????KeyPressChar

    */
    inline int KeyPressChar(const QString& key_str);

    /*
    Method KeyPressStr

    ????KeyPressStr

    */
    inline int KeyPressStr(const QString& key_str, int delay);

    /*
    Method KeyUp

    ????KeyUp

    */
    inline int KeyUp(int vk_code);

    /*
    Method KeyUpChar

    ????KeyUpChar

    */
    inline int KeyUpChar(const QString& key_str);

    /*
    Method LeftClick

    ????LeftClick

    */
    inline int LeftClick();

    /*
    Method LeftDoubleClick

    ????LeftDoubleClick

    */
    inline int LeftDoubleClick();

    /*
    Method LeftDown

    ????LeftDown

    */
    inline int LeftDown();

    /*
    Method LeftUp

    ????LeftUp

    */
    inline int LeftUp();

    /*
    Method LockInput

    ????LockInput

    */
    inline int LockInput(int lock);

    /*
    Method MatchPicName

    ????MatchPicName

    */
    inline QString MatchPicName(const QString& pic_name);

    /*
    Method MiddleClick

    ????MiddleClick

    */
    inline int MiddleClick();

    /*
    Method MoveR

    ????MoveR

    */
    inline int MoveR(int rx, int ry);

    /*
    Method MoveTo

    ????MoveTo

    */
    inline int MoveTo(int x, int y);

    /*
    Method MoveToEx

    ????MoveToEx

    */
    inline QString MoveToEx(uint x, uint y, uint w, uint h);

    /*
    Method MoveWindow

    ????MoveWindow

    */
    inline int MoveWindow(int hwnd, int x, int y);

    /*
    Method Ocr

    ????Ocr

    */
    inline QString Ocr(int x1, int y1, int x2, int y2, const QString& color_format, double sim);

    /*
    Method OcrEx

    ????OcrEx

    */
    inline QString OcrEx(int x1, int y1, int x2, int y2, const QString& color_format, double sim);

    /*
    Method ReadData

    ????ReadData

    */
    inline QString ReadData(int hwnd, const QString& addr, int len);

    /*
    Method ReadDouble

    ????ReadDouble

    */
    inline double ReadDouble(int hwnd, const QString& addr);

    /*
    Method ReadFloat

    ????ReadFloat

    */
    inline double ReadFloat(int hwnd, const QString& addr);

    /*
    Method ReadInt

    ????ReadInt

    */
    inline int ReadInt(int hwnd, const QString& addr, int type);

    /*
    Method ReadString

    ????ReadString

    */
    inline QString ReadString(int hwnd, const QString& addr, int type, int len);

    /*
    Method Reg

    ????Reg

    */
    inline int Reg(const QString& reg_code, int type);

    /*
    Method RightClick

    ????RightClick

    */
    inline int RightClick();

    /*
    Method RightDown

    ????RightDown

    */
    inline int RightDown();

    /*
    Method RightUp

    ????RightUp

    */
    inline int RightUp();

    /*
    Method ScreenToClient

    ????ScreenToClient

    */
    inline int ScreenToClient(int hwnd, QVariant& x, QVariant& y);

    /*
    Method SendPaste

    ????SendPaste

    */
    inline int SendPaste(int hwnd);

    /*
    Method SendString

    ????SendString

    */
    inline int SendString(int hwnd, const QString& str);

    /*
    Method SendString2

    ????SendString2

    */
    inline int SendString2(int hwnd, const QString& str);

    /*
    Method SendStringIme

    ????SendStringIme

    */
    inline int SendStringIme(const QString& str);

    /*
    Method SetClientSize

    ????SetClientSize

    */
    inline int SetClientSize(int hwnd, int width, int hight);

    /*
    Method SetClipboard

    ????SetClipboard

    */
    inline int SetClipboard(const QString& value);

    /*
    Method SetDict

    ????SetDict

    */
    inline int SetDict(int index, const QString& file);

    /*
    Method SetDictPwd

    ????SetDictPwd

    */
    inline int SetDictPwd(const QString& pwd);

    /*
    Method SetKeypadDelay

    ????SetKeypadDelay

    */
    inline int SetKeypadDelay(const QString& type, int delay);

    /*
    Method SetMouseDelay

    ????SetMouseDelay

    */
    inline int SetMouseDelay(const QString& type, int delay);

    /*
    Method SetPath

    ????SetPath

    */
    inline int SetPath(const QString& path);

    /*
    Method SetPicPwd

    ????SetPicPwd

    */
    inline int SetPicPwd(const QString& pwd);

    /*
    Method SetShowErrorMsg

    ????SetShowErrorMsg

    */
    inline int SetShowErrorMsg(int show);

    /*
    Method SetSimMode

    ????SetSimMode

    */
    inline uint SetSimMode(uint mode);

    /*
    Method SetUAC

    ????SetUAC

    */
    inline uint SetUAC(uint enable);

    /*
    Method SetWindowSize

    ????SetWindowSize

    */
    inline int SetWindowSize(int hwnd, int width, int height);

    /*
    Method SetWindowState

    ????SetWindowState

    */
    inline int SetWindowState(int hwnd, int flag);

    /*
    Method SetWindowText

    ????SetWindowText

    */
    inline int SetWindowText(int hwnd, const QString& title);

    /*
    Method SetWindowTransparent

    ????SetWindowTransparent

    */
    inline int SetWindowTransparent(int hwnd, int trans);

    /*
    Method StringToData

    ????StringToData

    */
    inline QString StringToData(const QString& value, int type);

    /*
    Method TSDXGraphicProtect

    ????TSDXGraphicProtect

    */
    inline int TSDXGraphicProtect(int enable);

    /*
    Method TSDXKmProtect

    ????TSDXKmProtect

    */
    inline int TSDXKmProtect(int enable, const QString& type);

    /*
    Method TSGuardProtect

    ????TSGuardProtect

    */
    inline int TSGuardProtect(int enable, const QString& type);

    /*
    Method TSGuardProtectToHide

    ????TSGuardProtectToHide

    */
    inline int TSGuardProtectToHide(int enble);

    /*
    Method TSGuardProtectToHide2

    ????TSGuardProtectToHide2

    */
    inline int TSGuardProtectToHide2(int enable);

    /*
    Method TSGuardProtectToNP

    ????TSGuardProtectToNP

    */
    inline int TSGuardProtectToNP(int enable);

    /*
    Method TerminateProcess

    ????TerminateProcess

    */
    inline int TerminateProcess(int pid);

    /*
    Method UnBindWindow

    ????UnBindWindow

    */
    inline int UnBindWindow();

    /*
    Method UseDict

    ????UseDict

    */
    inline int UseDict(int index);

    /*
    Method Ver

    ????Ver

    */
    inline QString Ver();

    /*
    Method VirtualAllocEx

    ????VirtualAllocEx

    */
    inline int VirtualAllocEx(int hwnd, int addr, int size, int type);

    /*
    Method VirtualFreeEx

    ????VirtualFreeEx

    */
    inline int VirtualFreeEx(int hwnd, int addr);

    /*
    Method WaitKey

    ????WaitKey

    */
    inline uint WaitKey(uint vk_code, uint time_out);

    /*
    Method WheelDown

    ????WheelDown

    */
    inline int WheelDown();

    /*
    Method WheelUp

    ????WheelUp

    */
    inline int WheelUp();

    /*
    Method WriteData

    ????WriteData

    */
    inline int WriteData(int hwnd, const QString& addr, const QString& data);

    /*
    Method WriteDouble

    ????WriteDouble

    */
    inline int WriteDouble(int hwnd, const QString& addr, double v);

    /*
    Method WriteFloat

    ????WriteFloat

    */
    inline int WriteFloat(int hwnd, const QString& addr, double v);

    /*
    Method WriteInt

    ????WriteInt

    */
    inline int WriteInt(int hwnd, const QString& addr, int type, int v);

    /*
    Method WriteString

    ????WriteString

    */
    inline int WriteString(int hwnd, const QString& addr, int type, const QString& v);

    /*
    Method delay

    ????Delay

    */
    inline int delay(int mis);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_TSPLUGLIB_NOINLINES
inline int TSPlugInterFace::AsmAdd(const QString& asm_ins)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_ins};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int TSPlugInterFace::AsmCall(int hwnd, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int TSPlugInterFace::AsmClear()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QString TSPlugInterFace::AsmCode(int base_addr)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&base_addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString TSPlugInterFace::Assemble(const QString& asm_code, int base_addr, int is_upper)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_code, (void*)&base_addr, (void*)&is_upper};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int TSPlugInterFace::BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int TSPlugInterFace::BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& publics, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&publics, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int TSPlugInterFace::Capture(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int TSPlugInterFace::CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int TSPlugInterFace::CaptureJpg(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int TSPlugInterFace::CapturePng(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int TSPlugInterFace::CheckFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline uint TSPlugInterFace::CheckUAC()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int TSPlugInterFace::ClearDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int TSPlugInterFace::ClientToScreen(int ClientToScreen, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ClientToScreen, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int TSPlugInterFace::CmpColor(int x, int y, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int TSPlugInterFace::DisableFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline QString TSPlugInterFace::DoubleToData(double value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int TSPlugInterFace::DownCpu(int rate)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline uint TSPlugInterFace::EnableRealKeypad(uint enable)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline uint TSPlugInterFace::EnableRealMouse(uint enable, uint mousedelay, uint mousestep)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&mousedelay, (void*)&mousestep};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline QString TSPlugInterFace::EnumProcess(const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline QString TSPlugInterFace::EnumWindow(int parent, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString TSPlugInterFace::EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindData(int hwnd, const QString& addr_range, const QString& data)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline uint TSPlugInterFace::FindMultiColor(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir, QVariant& intX, QVariant& intY)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindMultiColorEx(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindStr(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindStrFast(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrFastEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrFastExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrFastS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStrS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindString(int hwnd, const QString& addr_range, const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindWindow(const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindWindowByProcessId(int process_id, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_id, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int TSPlugInterFace::FindWindowEx(int parent, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline QString TSPlugInterFace::FloatToData(double value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int TSPlugInterFace::FreeProcessMemory(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetBasePath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetClientSize(int hwnd, QVariant& width, QVariant& height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetClipboard()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetColor(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetCommandLine(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetCursorPos(QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetCursorShape()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetForegroundFocus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetForegroundWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetMachineCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetModuleBaseAddr(int hwnd, const QString& modulename)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&modulename};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetMousePointWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetNowDict()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetPointWindow(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetProcessInfo(int pid)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetScreenData(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetSpecialWindow(int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetWindow(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetWindowClass(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetWindowProcessId(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetWindowProcessPath(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}

inline int TSPlugInterFace::GetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline QString TSPlugInterFace::GetWindowTitle(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
    return qax_result;
}

inline QString TSPlugInterFace::IntToData(int value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
    return qax_result;
}

inline int TSPlugInterFace::IsBind(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline int TSPlugInterFace::IsDisplayDead(int x1, int y1, int x2, int y2, int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyDown(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyDownChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyPress(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyPressChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyPressStr(const QString& key_str, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyUp(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
    return qax_result;
}

inline int TSPlugInterFace::KeyUpChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
    return qax_result;
}

inline int TSPlugInterFace::LeftClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline int TSPlugInterFace::LeftDoubleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline int TSPlugInterFace::LeftDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline int TSPlugInterFace::LeftUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline int TSPlugInterFace::LockInput(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline QString TSPlugInterFace::MatchPicName(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline int TSPlugInterFace::MiddleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
    return qax_result;
}

inline int TSPlugInterFace::MoveR(int rx, int ry)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rx, (void*)&ry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
    return qax_result;
}

inline int TSPlugInterFace::MoveTo(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
    return qax_result;
}

inline QString TSPlugInterFace::MoveToEx(uint x, uint y, uint w, uint h)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
    return qax_result;
}

inline int TSPlugInterFace::MoveWindow(int hwnd, int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
    return qax_result;
}

inline QString TSPlugInterFace::Ocr(int x1, int y1, int x2, int y2, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
    return qax_result;
}

inline QString TSPlugInterFace::OcrEx(int x1, int y1, int x2, int y2, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
    return qax_result;
}

inline QString TSPlugInterFace::ReadData(int hwnd, const QString& addr, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
    return qax_result;
}

inline double TSPlugInterFace::ReadDouble(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
    return qax_result;
}

inline double TSPlugInterFace::ReadFloat(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
    return qax_result;
}

inline int TSPlugInterFace::ReadInt(int hwnd, const QString& addr, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline QString TSPlugInterFace::ReadString(int hwnd, const QString& addr, int type, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline int TSPlugInterFace::Reg(const QString& reg_code, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&reg_code, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline int TSPlugInterFace::RightClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline int TSPlugInterFace::RightDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline int TSPlugInterFace::RightUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline int TSPlugInterFace::ScreenToClient(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int TSPlugInterFace::SendPaste(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int TSPlugInterFace::SendString(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int TSPlugInterFace::SendString2(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline int TSPlugInterFace::SendStringIme(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetClientSize(int hwnd, int width, int hight)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&hight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetClipboard(const QString& value)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetDict(int index, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetDictPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetKeypadDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetMouseDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetPath(const QString& path)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetPicPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetShowErrorMsg(int show)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&show};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
    return qax_result;
}

inline uint TSPlugInterFace::SetSimMode(uint mode)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
    return qax_result;
}

inline uint TSPlugInterFace::SetUAC(uint enable)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetWindowSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetWindowText(int hwnd, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
    return qax_result;
}

inline int TSPlugInterFace::SetWindowTransparent(int hwnd, int trans)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&trans};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
    return qax_result;
}

inline QString TSPlugInterFace::StringToData(const QString& value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSDXGraphicProtect(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSDXKmProtect(int enable, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSGuardProtect(int enable, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSGuardProtectToHide(int enble)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enble};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSGuardProtectToHide2(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
    return qax_result;
}

inline int TSPlugInterFace::TSGuardProtectToNP(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
    return qax_result;
}

inline int TSPlugInterFace::TerminateProcess(int pid)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
    return qax_result;
}

inline int TSPlugInterFace::UnBindWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 150, _a);
    return qax_result;
}

inline int TSPlugInterFace::UseDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
    return qax_result;
}

inline QString TSPlugInterFace::Ver()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
    return qax_result;
}

inline int TSPlugInterFace::VirtualAllocEx(int hwnd, int addr, int size, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&size, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
    return qax_result;
}

inline int TSPlugInterFace::VirtualFreeEx(int hwnd, int addr)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
    return qax_result;
}

inline uint TSPlugInterFace::WaitKey(uint vk_code, uint time_out)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
    return qax_result;
}

inline int TSPlugInterFace::WheelDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
    return qax_result;
}

inline int TSPlugInterFace::WheelUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
    return qax_result;
}

inline int TSPlugInterFace::WriteData(int hwnd, const QString& addr, const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
    return qax_result;
}

inline int TSPlugInterFace::WriteDouble(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
    return qax_result;
}

inline int TSPlugInterFace::WriteFloat(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
    return qax_result;
}

inline int TSPlugInterFace::WriteInt(int hwnd, const QString& addr, int type, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
    return qax_result;
}

inline int TSPlugInterFace::WriteString(int hwnd, const QString& addr, int type, const QString& v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
    return qax_result;
}

inline int TSPlugInterFace::delay(int mis)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mis};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
    return qax_result;
}


inline int ITSPlugInterFace::AsmAdd(const QString& asm_ins)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_ins};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int ITSPlugInterFace::AsmCall(int hwnd, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int ITSPlugInterFace::AsmClear()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::AsmCode(int base_addr)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&base_addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::Assemble(const QString& asm_code, int base_addr, int is_upper)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_code, (void*)&base_addr, (void*)&is_upper};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int ITSPlugInterFace::BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int ITSPlugInterFace::BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& publics, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&publics, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int ITSPlugInterFace::Capture(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int ITSPlugInterFace::CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int ITSPlugInterFace::CaptureJpg(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int ITSPlugInterFace::CapturePng(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int ITSPlugInterFace::CheckFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::CheckUAC()
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int ITSPlugInterFace::ClearDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int ITSPlugInterFace::ClientToScreen(int ClientToScreen, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&ClientToScreen, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int ITSPlugInterFace::CmpColor(int x, int y, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int ITSPlugInterFace::DisableFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::DoubleToData(double value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int ITSPlugInterFace::DownCpu(int rate)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::EnableRealKeypad(uint enable)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::EnableRealMouse(uint enable, uint mousedelay, uint mousestep)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&mousedelay, (void*)&mousestep};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::EnumProcess(const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::EnumWindow(int parent, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindData(int hwnd, const QString& addr_range, const QString& data)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::FindMultiColor(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir, QVariant& intX, QVariant& intY)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindMultiColorEx(uint x1, uint y1, uint x2, uint y2, const QString& first_color, const QString& offset_color, double sim, uint dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindStr(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindStrFast(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrFastEx(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrFastExS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrFastS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStrS(int x1, int y1, int x2, int y2, const QString& string, const QString& color_format, double sim, QVariant& intX, QVariant& intY)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&string, (void*)&color_format, (void*)&sim, (void*)&intX, (void*)&intY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindString(int hwnd, const QString& addr_range, const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindWindow(const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindWindowByProcessId(int process_id, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_id, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FindWindowEx(int parent, const QString& class_name, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&class_name, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::FloatToData(double value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int ITSPlugInterFace::FreeProcessMemory(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetBasePath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetClientSize(int hwnd, QVariant& width, QVariant& height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetClipboard()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetColor(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetCommandLine(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetCursorPos(QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetCursorShape()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetForegroundFocus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetForegroundWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetMachineCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetModuleBaseAddr(int hwnd, const QString& modulename)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&modulename};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetMousePointWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetNowDict()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetPointWindow(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetProcessInfo(int pid)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetScreenData(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetSpecialWindow(int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetWindow(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetWindowClass(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetWindowProcessId(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetWindowProcessPath(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}

inline int ITSPlugInterFace::GetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::GetWindowTitle(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::IntToData(int value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
    return qax_result;
}

inline int ITSPlugInterFace::IsBind(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline int ITSPlugInterFace::IsDisplayDead(int x1, int y1, int x2, int y2, int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyDown(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyDownChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyPress(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyPressChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyPressStr(const QString& key_str, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyUp(int vk_code)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
    return qax_result;
}

inline int ITSPlugInterFace::KeyUpChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
    return qax_result;
}

inline int ITSPlugInterFace::LeftClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline int ITSPlugInterFace::LeftDoubleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline int ITSPlugInterFace::LeftDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline int ITSPlugInterFace::LeftUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline int ITSPlugInterFace::LockInput(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::MatchPicName(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline int ITSPlugInterFace::MiddleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
    return qax_result;
}

inline int ITSPlugInterFace::MoveR(int rx, int ry)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rx, (void*)&ry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
    return qax_result;
}

inline int ITSPlugInterFace::MoveTo(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::MoveToEx(uint x, uint y, uint w, uint h)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
    return qax_result;
}

inline int ITSPlugInterFace::MoveWindow(int hwnd, int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::Ocr(int x1, int y1, int x2, int y2, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::OcrEx(int x1, int y1, int x2, int y2, const QString& color_format, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color_format, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::ReadData(int hwnd, const QString& addr, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
    return qax_result;
}

inline double ITSPlugInterFace::ReadDouble(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
    return qax_result;
}

inline double ITSPlugInterFace::ReadFloat(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
    return qax_result;
}

inline int ITSPlugInterFace::ReadInt(int hwnd, const QString& addr, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::ReadString(int hwnd, const QString& addr, int type, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline int ITSPlugInterFace::Reg(const QString& reg_code, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&reg_code, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline int ITSPlugInterFace::RightClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline int ITSPlugInterFace::RightDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline int ITSPlugInterFace::RightUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline int ITSPlugInterFace::ScreenToClient(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SendPaste(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SendString(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SendString2(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SendStringIme(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetClientSize(int hwnd, int width, int hight)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&hight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetClipboard(const QString& value)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetDict(int index, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetDictPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetKeypadDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetMouseDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetPath(const QString& path)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetPicPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetShowErrorMsg(int show)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&show};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::SetSimMode(uint mode)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::SetUAC(uint enable)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetWindowSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetWindowText(int hwnd, const QString& title)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
    return qax_result;
}

inline int ITSPlugInterFace::SetWindowTransparent(int hwnd, int trans)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&trans};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::StringToData(const QString& value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSDXGraphicProtect(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSDXKmProtect(int enable, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSGuardProtect(int enable, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSGuardProtectToHide(int enble)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enble};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSGuardProtectToHide2(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TSGuardProtectToNP(int enable)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
    return qax_result;
}

inline int ITSPlugInterFace::TerminateProcess(int pid)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
    return qax_result;
}

inline int ITSPlugInterFace::UnBindWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 150, _a);
    return qax_result;
}

inline int ITSPlugInterFace::UseDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
    return qax_result;
}

inline QString ITSPlugInterFace::Ver()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
    return qax_result;
}

inline int ITSPlugInterFace::VirtualAllocEx(int hwnd, int addr, int size, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&size, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
    return qax_result;
}

inline int ITSPlugInterFace::VirtualFreeEx(int hwnd, int addr)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
    return qax_result;
}

inline uint ITSPlugInterFace::WaitKey(uint vk_code, uint time_out)
{
    uint qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk_code, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WheelDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WheelUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WriteData(int hwnd, const QString& addr, const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WriteDouble(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WriteFloat(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WriteInt(int hwnd, const QString& addr, int type, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
    return qax_result;
}

inline int ITSPlugInterFace::WriteString(int hwnd, const QString& addr, int type, const QString& v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
    return qax_result;
}

inline int ITSPlugInterFace::delay(int mis)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mis};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<TSPlugLib::TSPlugInterFace, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<TSPlugLib::TSPlugInterFace*>(t)->TSPlugLib::TSPlugInterFace::~TSPlugInterFace();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) TSPlugLib::TSPlugInterFace;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const TSPlugLib::TSPlugInterFace*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<TSPlugLib::TSPlugInterFace*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<TSPlugLib::ITSPlugInterFace, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<TSPlugLib::ITSPlugInterFace*>(t)->TSPlugLib::ITSPlugInterFace::~ITSPlugInterFace();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) TSPlugLib::ITSPlugInterFace;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const TSPlugLib::ITSPlugInterFace*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<TSPlugLib::ITSPlugInterFace*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

